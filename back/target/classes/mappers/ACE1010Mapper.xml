<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.dz.back.ace.ace1000.ace1010.mapper.ACE1010Mapper">
	<resultMap
		type="com.dz.back.ace.ace1000.ace1010.dto.AbizCarPersonDTO"
		id="abizcarpersonMap">
		<id property="co_cd" column="CO_CD" />
		<id property="seq_nb" column="SEQ_NB" />
		<id property="car_cd" column="CAR_CD" />
		<id property="use_dt" column="USE_DT" />
		<id property="emp_cd" column="EMP_CD" />

		<result property="rmk_dc" column="RMK_DC" />
		<result property="start_time" column="START_TIME" />
		<result property="end_time" column="END_TIME" />
		<result property="dept_cd" column="DEPT_CD" />
		<result property="use_fg" column="USE_FG" />
		<result property="start_fg" column="START_FG" />
		<result property="start_addr" column="START_ADDR" />
		<result property="start_addr1" column="START_ADDR1" />
		<result property="end_fg" column="END_FG" />
		<result property="end_addr" column="END_ADDR" />
		<result property="end_addr1" column="END_ADDR1" />
		<result property="mileage_km" column="MILEAGE_KM" />
		<result property="before_km" column="BEFORE_KM" />
		<result property="after_km" column="AFTER_KM" />
		<result property="send_yn" column="SEND_YN" />
		<result property="insert_id" column="INSERT_ID" />
		<result property="insert_ip" column="INSERT_IP" />
		<result property="insert_dt" column="INSERT_DT" />
		<result property="modify_id" column="MODIFY_ID" />
		<result property="modify_ip" column="MODIFY_IP" />
		<result property="modify_dt" column="MODIFY_DT" />
		<result property="data_fg" column="DATA_FG" />
	</resultMap>
	<resultMap id="abizcarbookmarkMap"
		type="com.dz.back.ace.ace1000.ace1010.dto.AbizCarBookmarkDTO">

		<id column="CO_CD" property="co_cd" />

		<id column="EMP_CD" property="emp_cd" />

		<id column="BOOKMARK_CD" property="bookmark_cd" />

		<result column="BOOKMARK_NM" property="bookmark_nm" />

		<result column="USE_FG" property="use_fg" />

		<result column="START_TIME" property="start_time" />

		<result column="END_TIME" property="end_time" />

		<result column="START_FG" property="start_fg" />

		<result column="START_ADDR" property="start_addr" />

		<result column="END_FG" property="end_fg" />

		<result column="END_ADDR" property="end_addr" />

		<result column="MILEAGE_KM" property="mileage_km" />

	</resultMap>

	<select id="getallcars" resultMap="abizcarpersonMap">
		select
		abizcarperson.co_cd,
		abizcarperson.seq_nb,
		abizcarperson.car_cd,
		abizcarperson.use_dt,
		abizcarperson.emp_cd,
		abizcarperson.start_time,
		abizcarperson.end_time,
		abizcarperson.dept_cd,
		abizcarperson.use_fg,
		abizcarperson.start_fg,
		abizcarperson.start_addr,
		abizcarperson.start_addr1,
		abizcarperson.end_fg,
		abizcarperson.end_addr,
		abizcarperson.end_addr1,
		abizcarperson.mileage_km,
		abizcarperson.before_km,
		abizcarperson.after_km,
		abizcarperson.send_yn,
		abizcarperson.insert_id,
		abizcarperson.insert_ip,
		abizcarperson.modify_id,
		abizcarperson.modify_ip,
		abizcarperson.modify_dt,
		abizcarperson.data_fg
		from abizcar_person as abizcarperson
	</select>

	<select id="findallbycar" resultMap="abizcarpersonMap">
		SELECT
		abizcarperson.co_cd,
		abizcarperson.seq_nb,
		abizcarperson.car_cd,
		abizcarperson.use_dt,
		abizcarperson.emp_cd,
		abizcarperson.start_time,
		abizcarperson.end_time,
		abizcarperson.dept_cd,
		abizcarperson.use_fg,
		abizcarperson.start_fg,
		abizcarperson.start_addr,
		abizcarperson.start_addr1,
		abizcarperson.end_fg,
		abizcarperson.end_addr,
		abizcarperson.end_addr1,
		abizcarperson.mileage_km,
		abizcarperson.before_km,
		abizcarperson.after_km,
		abizcarperson.send_yn,
		abizcarperson.insert_id,
		abizcarperson.insert_ip,
		abizcarperson.modify_id,
		abizcarperson.modify_ip,
		abizcarperson.modify_dt,
		abizcarperson.rmk_dc,
		abizcarperson.data_fg
		from abizcar_person as abizcarperson
		WHERE
		abizcarperson.car_cd = #{car_cd}
		AND abizcarperson.use_dt BETWEEN
		#{startDate} AND #{endDate}
		ORDER BY abizcarperson.use_dt ASC,
		abizcarperson.start_time ASC
	</select>

	<select id="findallbycarByCarCd" resultMap="abizcarpersonMap">
		SELECT
		abizcarperson.co_cd,
		abizcarperson.seq_nb,
		abizcarperson.car_cd,
		abizcarperson.use_dt,
		abizcarperson.emp_cd,
		abizcarperson.start_time,
		abizcarperson.end_time,
		abizcarperson.dept_cd,
		abizcarperson.use_fg,
		abizcarperson.start_fg,
		abizcarperson.start_addr,
		abizcarperson.start_addr1,
		abizcarperson.end_fg,
		abizcarperson.end_addr,
		abizcarperson.end_addr1,
		abizcarperson.mileage_km,
		abizcarperson.before_km,
		abizcarperson.after_km,
		abizcarperson.send_yn,
		abizcarperson.insert_id,
		abizcarperson.insert_ip,
		abizcarperson.modify_id,
		abizcarperson.modify_ip,
		abizcarperson.modify_dt,
		abizcarperson.rmk_dc,
		abizcarperson.data_fg
		from abizcar_person as abizcarperson
		WHERE
		abizcarperson.car_cd = #{car_cd}
		ORDER BY abizcarperson.use_dt ASC,
		abizcarperson.start_time ASC
	</select>




	<!-- 운행 구분 -->
	<resultMap
		type="com.dz.back.ace.ace1000.ace1010.dto.UseFgDTO" id="UseFgDTO">
		<id property="d_id" column="D_ID" />
		<id property="d_nm" column="D_NM" />
	</resultMap>

	<select id="usefg" resultMap="UseFgDTO">
		SELECT usefg.D_ID, usefg.D_NM FROM
		sctrl_d as usefg
	</select>
	<!-- 출발 도착구분 -->
	<resultMap
		type="com.dz.back.ace.ace1000.ace1010.dto.StartEndFgDTO"
		id="StartEndFgDTO">
		<id property="p_id" column="P_ID" />
		<id property="p_nm" column="P_NM" />
	</resultMap>

	<select id="startendfg" resultMap="StartEndFgDTO">
		SELECT startendfg.P_ID,
		startendfg.P_NM FROM
		sctrl_p as startendfg
	</select>
	<!-- 마감 유무 -->
	<resultMap
		type="com.dz.back.ace.ace1000.ace1010.dto.SendYnDTO" id="SendYnDTO">
		<id property="s_id" column="S_ID" />
		<id property="s_nm" column="S_NM" />
	</resultMap>

	<select id="sendyn" resultMap="SendYnDTO">
		SELECT sendyn.S_ID, sendyn.S_NM
		FROM
		sctrl_s as sendyn
	</select>
	
	<select id="selectStartaccKm" resultType="String">
		SELECT startacc_km 
		FROM aper_startacc_info 
		WHERE car_cd = #{car_cd};
	</select>

	<select id="selectStartaccKm" resultType="String">
		SELECT startacc_km
		FROM
		aper_startacc_info
		WHERE car_cd = #{car_cd};
	</select>

	<!-- 운행기록부 한 행 저장 -->
	<insert id="insertAbizCarPerson"
		parameterType="com.dz.back.ace.ace1000.ace1010.dto.AbizCarPersonDTO">
		INSERT INTO
		abizcar_person
		(
		CO_CD,
		SEQ_NB,
		CAR_CD,
		USE_DT,
		EMP_CD,
		START_TIME,
		END_TIME,
		DEPT_CD,
		USE_FG,
		START_FG,
		START_ADDR,
		START_ADDR1,
		END_FG,
		END_ADDR,
		END_ADDR1,
		MILEAGE_KM,
		BEFORE_KM,
		AFTER_KM,
		SEND_YN,
		INSERT_ID,
		INSERT_IP,
		INSERT_DT,
		MODIFY_ID,
		MODIFY_IP,
		MODIFY_DT,
		RMK_DC

		) VALUES (
		#{co_cd},
		#{seq_nb},
		#{car_cd},
		#{use_dt},
		#{emp_cd},
		#{start_time},
		#{end_time},
		#{dept_cd},
		#{use_fg},
		#{start_fg},
		#{start_addr},
		#{start_addr1},
		#{end_fg},
		#{end_addr},
		#{end_addr1},
		#{mileage_km},
		#{before_km},
		#{after_km},
		#{send_yn},
		#{insert_id},
		#{insert_ip},
		#{insert_dt},
		#{modify_id},
		#{modify_ip},
		#{modify_dt},
		#{rmk_dc}

		)

	</insert>

	<!-- 운행기록부 기초거리 저장 -->
	<insert id="insertStartaccKm"
		parameterType="com.dz.back.ace.ace1000.ace1010.dto.AperStartaccInfoDTO">
		INSERT INTO
		aper_startacc_info
		(
		CO_CD,
		CAR_CD,

		STARTACC_KM,
		INSERT_ID,
		INSERT_IP,
		INSERT_DT

		) VALUES (
		#{co_cd},
		#{car_cd},

		#{startacc_km},
		#{insert_id},
		#{insert_ip},
		NOW()
		)

	</insert>

	<!-- 운행기록부 한 행 저장 -->
	<update id="updateAbizCarPerson"
		parameterType="com.dz.back.ace.ace1000.ace1010.dto.AbizCarPersonDTO">
		UPDATE abizcar_person SET

		CO_CD = #{co_cd},
		SEQ_NB =
		#{seq_nb},
		CAR_CD = #{car_cd},
		USE_DT = #{use_dt},
		EMP_CD = #{emp_cd},
		START_TIME = #{start_time},
		END_TIME = #{end_time},
		DEPT_CD =
		#{dept_cd},
		USE_FG = #{use_fg},
		START_FG = #{start_fg},
		START_ADDR =
		#{start_addr},
		START_ADDR1 = #{start_addr1},
		END_FG =
		#{end_fg},
		END_ADDR
		= #{end_addr},
		END_ADDR1 = #{end_addr1},
		MILEAGE_KM =
		#{mileage_km},
		BEFORE_KM = #{before_km},
		AFTER_KM = #{after_km},
		SEND_YN
		= #{send_yn},
		MODIFY_ID = #{modify_id},
		MODIFY_IP = #{modify_ip},
		MODIFY_DT=
		#{modify_dt},
		RMK_DC = #{rmk_dc}

		WHERE SEQ_NB = #{seq_nb} AND CAR_CD =
		#{car_cd}

	</update>

	<!-- 운행기록부 기초거리 테이블 수정 aper_startacc_info -->
	<update id="updateStartaccKm"
		parameterType="com.dz.back.ace.ace1000.ace1010.dto.AperStartaccInfoDTO">
		UPDATE aper_startacc_info
		SET
		CO_CD = #{co_cd},
<<<<<<< Updated upstream
		CAR_CD =
		#{car_cd},
=======
		CAR_CD = #{car_cd},
>>>>>>> Stashed changes
		STARTACC_KM = #{startacc_km},
		MODIFY_ID = #{modify_id},
		MODIFY_DT = NOW()
		WHERE
		CO_CD = #{co_cd} AND CAR_CD = #{car_cd}
	</update>


	<!-- 차량의 최대 seq_nm 찾기 -->
	<select id="findMaxSeqNb" parameterType="String"
		resultType="Integer">
		SELECT COALESCE(Max(seq_nb),0) FROM abizcar_person WHERE
		car_cd = #{car_cd}


	</select>
	<select id="updateTimeCheck" resultType="Integer"><!-- abizcarpersonMap -->
		SELECT COUNT(*)
		FROM abizcar_person
		WHERE USE_DT = #{use_dt}
		AND (
		(#{start_time} BETWEEN START_TIME AND END_TIME) OR
		(#{end_time} BETWEEN
		START_TIME AND END_TIME) OR
		(START_TIME = #{start_time}) OR
		(START_TIME
		= #{end_time}) OR
		(END_TIME = #{start_time}) OR
		(END_TIME = #{end_time})
		)
		AND SEQ_NB != #{seq_nb};
	</select>

	<select id="checkAperStart" resultType="Integer"><!-- abizcarpersonMap -->
<<<<<<< Updated upstream
		SELECT COUNT(*) FROM aper_startacc_info WHERE CO_CD = #{co_cd} AND
		CAR_CD = #{car_cd}
=======
		SELECT COUNT(*) FROM aper_startacc_info WHERE CO_CD = #{co_cd} AND CAR_CD = #{car_cd}
>>>>>>> Stashed changes

	</select>

	<!-- start_time이 전 행의 end_time과 겨치기 허용 <select id="updateTimeCheck" resultType="Integer" 
		>abizcarpersonMap SELECT COUNT(*) FROM abizcar_person WHERE USE_DT = #{use_dt} 
		AND ( (#{start_time} >= START_TIME AND #{start_time} < END_TIME) OR (#{end_time} 
		> START_TIME AND #{end_time} <= END_TIME) ) AND SEQ_NB != #{seq_nb}; </select> -->

	<!-- start_time이 전 행의 end_time과 겨치기 허용 <select id="updateTimeCheck" resultType="Integer" 
		>abizcarpersonMap SELECT COUNT(*) FROM abizcar_person WHERE USE_DT = #{use_dt} 
		AND ( (#{start_time} >= START_TIME AND #{start_time} < END_TIME) OR (#{end_time} 
		> START_TIME AND #{end_time} <= END_TIME) ) AND SEQ_NB != #{seq_nb}; </select> -->


	<!-- 운행기록 삭제 -->
	<delete id="deleteAbizcarPerson" parameterType="java.util.List">
		<foreach collection="list" item="record" separator=";">
			DELETE FROM
			abizcar_person
			WHERE abizcar_person.SEQ_NB = #{record.seq_nb}
			AND
			abizcar_person.CAR_CD = #{record.car_cd}
		</foreach>
	</delete>

	<!-- seq_nb가 제일 낮은 거부터 오름차순으로 운행기록 가져오기 -->
	<select id="findAllSeqNbNotSendY" resultMap="abizcarpersonMap">
		SELECT
		abizcar_person.seq_nb,
		abizcar_person.car_cd,
		abizcar_person.mileage_km,
		abizcar_person.before_km,
		abizcar_person.after_km
		FROM
		abizcar_person
		WHERE
		abizcar_person.car_cd =
		#{car_cd}

		AND abizcar_person.SEND_YN = '2'

		ORDER BY

		abizcar_person.SEQ_NB ASC

	</select>

	<select id="rownumAbizcarPersonNotSendY">



	</select>

	<!-- /운행기록 삭제 -->
	<!-- 주행거리 변경시 seq_nb 이상의 데이터 주행전, 주행후 자동 계산 -->
	<!-- <select id="selectByCarCdAndSeqNb" resultType="abizcarpersonMap"> SELECT 
		* FROM abizcar_person WHERE CAR_CD = #{car_cd} AND SEQ_NB = #{seq_nb} </select> -->


	<update id="updateOnlyOneMileage"
		parameterType="com.dz.back.ace.ace1000.ace1010.dto.AutoCalcMileageDTO">
		UPDATE abizcar_person SET
		MILEAGE_KM = #{mileage_km},
		AFTER_KM = BEFORE_KM + #{mileage_km}
		WHERE CAR_CD = #{car_cd} AND
		SEQ_NB = #{seq_nb}
	</update>

	<!-- <select id="selectByCarCdAndSeqNbGreaterThan" resultMap="abizcarpersonMap"> 
		SELECT * FROM abizcar_person WHERE CAR_CD = #{car_cd} AND SEQ_NB > #{seq_nb} 
		ORDER BY SEQ_NB </select> -->
	<update id="updateMileageForeach" parameterType="java.util.List">
		<foreach collection="list" item="record" separator=";">
			UPDATE
			abizcar_person
			SET
			abizcar_person.BEFORE_KM = #{record.before_km},
			abizcar_person.AFTER_KM = #{record.after_km}
			WHERE
			abizcar_person.SEQ_NB = #{record.seq_nb} AND abizcar_person.CAR_CD =
			#{record.car_cd}

		</foreach>
	</update>

	<!-- 안분에 사용할 기초거리 가져오기 -->
	<select id="getstartaccfordivision" resultType="Integer">
		SELECT
		COALESCE(STARTACC_KM ,0) FROM aper_startacc_info WHERE CAR_CD =
		#{car_cd}
	</select>

	<!-- 안분된 운행기록 저장 -->
	<update id="savedivisiondistance" parameterType="java.util.List">
		<foreach collection="list" item="record" separator=";">
			UPDATE
			abizcar_person
			SET
			abizcar_person.MILEAGE_KM= #{record.mileage_km}
			WHERE abizcar_person.SEQ_NB = #{record.seq_nb} AND
			abizcar_person.CAR_CD = #{record.car_cd}

		</foreach>

	</update>


	<!-- 즐겨찾기 조회 -->
	<select id="findallbookmark" resultMap="abizcarbookmarkMap"
		parameterType="String">
		SELECT
    bookmark.co_cd,
    bookmark.emp_cd,
    bookmark.bookmark_cd,
    bookmark.bookmark_nm,
    bookmark.use_fg,
    bookmark.start_time,
    bookmark.end_time,
    bookmark.start_fg,
    bookmark.start_addr,
    bookmark.end_fg,
    bookmark.end_addr,
    bookmark.mileage_km
FROM
    abizcar_bookmark as bookmark
WHERE
    bookmark.emp_cd = #{emp_cd}
	</select>
	
	<!-- 즐겨찾기 출발지 구분 -->
	<select id="bookmarkstartfg1" resultMap="abizcarbookmarkMap"
		parameterType="String">
		SELECT
    bookmark.co_cd,
    bookmark.emp_cd,
    bookmark.bookmark_cd,
    bookmark.bookmark_nm,
    bookmark.use_fg,
    bookmark.start_time,
    bookmark.end_time,
    bookmark.start_fg,
    bookmark.start_addr,
    bookmark.end_fg,
    bookmark.end_addr,
    bookmark.mileage_km
FROM
    abizcar_bookmark as bookmark
WHERE
    bookmark.EMP_CD = #{emp_cd}
    AND bookmark.CO_CD = #{co_cd}
    AND bookmark.BOOKMARK_CD='1'
	</select>
	
	<!-- 즐겨찾기 출발지 구분 -->
	<select id="bookmarkstartfg2" resultMap="abizcarbookmarkMap"
		parameterType="String">
		SELECT
    bookmark.co_cd,
    bookmark.emp_cd,
    bookmark.bookmark_cd,
    bookmark.bookmark_nm,
    bookmark.use_fg,
    bookmark.start_time,
    bookmark.end_time,
    bookmark.start_fg,
    bookmark.start_addr,
    bookmark.end_fg,
    bookmark.end_addr,
    bookmark.mileage_km
FROM
    abizcar_bookmark as bookmark
WHERE
    bookmark.EMP_CD = #{emp_cd}
    AND bookmark.CO_CD = #{co_cd}
    AND bookmark.BOOKMARK_CD='2'
	</select>


	<!-- 즐겨찾기 입력 -->
	<insert id="insertbookmark" parameterType="java.util.List">
		INSERT INTO abizcar_bookmark 
		(co_cd, emp_cd, bookmark_cd, bookmark_nm, use_fg,start_time, end_time, start_fg, start_addr,end_fg, end_addr, mileage_km) VALUES
		<foreach separator="," item="bookmark" collection="list">
		(#{bookmark.co_cd},#{bookmark.emp_cd},#{bookmark.bookmark_cd},#{bookmark.bookmark_nm},#{bookmark.use_fg},#{bookmark.start_time},#{bookmark.end_time},#{bookmark.start_fg},#{bookmark.start_addr},#{bookmark.end_fg},#{bookmark.end_addr},#{bookmark.mileage_km})
		</foreach>
	</insert>

	<!-- 즐겨찾기 수정 -->
	<update id="updatebookmark"
		parameterType="com.dz.back.ace.ace1000.ace1010.dto.AbizCarBookmarkDTO">
		UPDATE abizcar_bookmark SET
		CO_CD = #{co_cd},
		EMP_CD = #{emp_cd},
		BOOKMARK_CD = #{bookmark_cd},
		BOOKMARK_NM = #{bookmark_nm},
		USE_FG = #{use_fg},
		START_TIME = #{start_time},
		END_TIME = #{end_time},
		START_FG = #{start_fg},
		START_ADDR = #{start_addr},
		END_FG = #{end_fg},
		END_ADDR = #{end_addr},
		MILEAGE_KM = #{mileage_km}
		WHERE BOOKMARK_CD = #{bookmark_cd}
	</update>

</mapper>